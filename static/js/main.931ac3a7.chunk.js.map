{"version":3,"sources":["components/Button/Button.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Searchbar/Searchbar.js","components/Loader/Loader.js","components/Api/Api.js","components/App.js","index.js"],"names":["Button","className","type","onClick","this","props","Component","ImageGalleryItem","imageUrl","id","src","alt","ImageGallery","handleClick","largeImageURL","onClose","pictures","map","webformatURL","Modal","handelModalEscapeKey","e","code","closeModalOnOverlayClick","window","addEventListener","handleCloseClickOverlay","removeEventListener","largeImageUrl","SearchBar","state","inputValue","handleChange","setState","target","value","handleSubmit","preventDefault","onSubmit","autoComplete","onChange","placeholder","LoaderSpinner","color","height","width","style","margin","searchQuery","page","axios","get","then","response","data","hits","AppStyled","styled","div","App","isLoading","showModal","error","shouldScroll","fetchPictures","Api","prevState","catch","finally","handleSearchFormSubmit","query","toggleModalImg","handleButton","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.931ac3a7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Button extends Component {\r\n    render() {\r\n        return (\r\n            <button className='Button' type=\"button\" onClick={this.props.onClick}>\r\n                Load More\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nButton.propTypes = { onClick: PropTypes.func };\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ imageUrl, id, onClick }) => {\r\n    return (\r\n        <li className=\"ImageGalleryItem\">\r\n            <img\r\n                className=\"ImageGalleryItem-image\"\r\n                id={id}\r\n                src={imageUrl}\r\n                alt=\"Is not available\"\r\n                onClick={onClick}\r\n            />\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    id: PropTypes.number,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react'\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ImageGallery extends Component {\r\n    handleClick = (largeImageURL) => {\r\n        this.props.onClose(largeImageURL);\r\n    };\r\n\r\n    render() {\r\n        const { pictures } = this.props;\r\n\r\n        return (\r\n            <ul className=\"ImageGallery\">\r\n                {pictures.map(({ id, webformatURL, largeImageURL }) => (\r\n                    <ImageGalleryItem\r\n                        key={id}\r\n                        id={id}\r\n                        imageUrl={webformatURL}\r\n                        onClick={() => this.handleClick(largeImageURL)}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    pictures: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            webformatURL: PropTypes.string,\r\n            largeImageURL: PropTypes.string,\r\n        })\r\n    ).isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n};","import React, { Component } from 'react'\r\n\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handelModalEscapeKey);\r\n        window.addEventListener(\"click\", this.handleCloseClickOverlay);\r\n    }\r\n    componentDidUpdate() {\r\n        window.removeEventListener(\"keydown\", this.handelModalEscapeKey);\r\n        window.removeEventListener(\"click\", this.handleCloseClickOverlay);\r\n    }\r\n\r\n    handelModalEscapeKey = (e) => {\r\n        if (e.code === \"Escape\") {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    closeModalOnOverlayClick = () => {\r\n        this.props.onClose();\r\n    };\r\n\r\n    render() {\r\n        const { largeImageUrl } = this.props;\r\n        return (\r\n            <div\r\n                className=\"Overlay\"\r\n                onClick={this.closeModalOnOverlayClick}\r\n            >\r\n                <div className=\"Modal\">\r\n                    <img src={largeImageUrl} alt=\"Not Available\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    largeImageUrl: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n};","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class SearchBar extends Component {\r\n    state = { inputValue: \"\" };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ inputValue: e.target.value });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.inputValue);\r\n        this.setState({ inputValue: \"\" });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        autoComplete=\"off\"\r\n                        type=\"text\"\r\n                        value={this.state.inputValue}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nSearchBar.propTypes = { onSubmit: PropTypes.func };","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default class LoaderSpinner extends Component {\r\n    render() {\r\n        return (\r\n            <Loader\r\n                type=\"Puff\"\r\n                color=\"#3f51b5\"\r\n                height={100}\r\n                width={100}\r\n                style={{ margin: 'auto' }}\r\n            />\r\n        );\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst fetchPicturesWithQuery = (searchQuery, page = 1) => {\r\n    return axios\r\n        .get(\r\n            `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=19534934-9bdcedd823ab91ff8ab8054d1&image_type=photo&orientation=horizontal&per_page=12`\r\n        )\r\n        .then((response) => response.data.hits);\r\n};\r\n\r\nexport default {\r\n    fetchPicturesWithQuery,\r\n};  ","import React, { Component } from \"react\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport Button from \"./Button/Button\";\r\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\r\nimport Modal from \"./Modal/Modal\";\r\nimport SearchBar from \"./Searchbar/Searchbar\";\r\nimport LoaderSpinner from './Loader/Loader'\r\nimport styled from \"styled-components\";\r\n\r\nimport Api from \"./Api/Api\";\r\n\r\n\r\n\r\nconst AppStyled = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr;\r\n\tgrid-gap: 16px;\r\n\tpadding-bottom: 24px;\r\n`;\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        pictures: [],\r\n        isLoading: false,\r\n        largeImageUrl: \"\",\r\n        showModal: false,\r\n        page: 1,\r\n        searchQuery: \"\",\r\n        error: false,\r\n        shouldScroll: false,\r\n    };\r\n\r\n    componentDidMount() { }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const prevQuery = prevState.searchQuery;\r\n        const nextQuery = this.state.searchQuery;\r\n        if (prevQuery !== nextQuery) {\r\n            this.fetchPictures();\r\n        }\r\n        if (this.state.shouldScroll === true) {\r\n            window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: \"smooth\",\r\n            });\r\n        }\r\n    }\r\n\r\n    fetchPictures = () => {\r\n        const { searchQuery, page } = this.state;\r\n        this.setState({ isLoading: true });\r\n        Api.fetchPicturesWithQuery(searchQuery, page)\r\n            .then((pictures) =>\r\n                this.setState((prevState) => ({\r\n                    pictures: [...prevState.pictures, ...pictures],\r\n                    page: prevState.page + 1,\r\n                }))\r\n            )\r\n            .catch((error) => this.setState({ error: true }))\r\n            .finally(() => this.setState({ isLoading: false }));\r\n    };\r\n\r\n    handleSearchFormSubmit = (query) => {\r\n        this.setState({\r\n            searchQuery: query,\r\n            page: 1,\r\n            pictures: [],\r\n        });\r\n    };\r\n\r\n    toggleModalImg = (largeImageUrl) => {\r\n        this.setState({ largeImageUrl: largeImageUrl });\r\n        this.setState({ shouldScroll: false });\r\n        this.setState({ showModal: !this.state.showModal });\r\n    };\r\n\r\n    handleButton = () => {\r\n        this.fetchPictures();\r\n        if (this.state.page > 1) {\r\n            this.setState({ shouldScroll: true });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { pictures, isLoading, error, showModal, largeImageUrl } = this.state;\r\n\r\n        return (\r\n            <AppStyled>\r\n                {error && <p>Whoops, something went wrong</p>}\r\n                <SearchBar onSubmit={this.handleSearchFormSubmit}></SearchBar>\r\n                {pictures.length > 0 && (\r\n                    <ImageGallery\r\n                        pictures={pictures}\r\n                        onClose={this.toggleModalImg}\r\n                    ></ImageGallery>\r\n                )}\r\n                {showModal && (\r\n                    <Modal onClose={this.toggleModalImg} largeImageUrl={largeImageUrl} />\r\n                )}\r\n                {pictures.length > 0 && !isLoading && (\r\n                    <Button type=\"button\" onClick={this.handleButton}></Button>\r\n                )}\r\n                {isLoading && <LoaderSpinner />}\r\n            </AppStyled>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}